Archive member included because of file (symbol)

c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_udivmodqi4.o)
                              Projecto LCD.o (__udivmodqi4)
c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_exit.o)
                              c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o (exit)
c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_copy_data.o)
                              Projecto LCD.o (__do_copy_data)
c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_clear_bss.o)
                              Projecto LCD.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

coluna              0x1               Projecto LCD.o
linha               0x1               Projecto LCD.o
frameBuffer         0x1e0             Projecto LCD.o
textBuffer          0xb4              Projecto LCD.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o
LOAD Projecto LCD.o
LOAD c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a
LOAD c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4\libc.a
LOAD c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x10c6
 *(.vectors)
 .vectors       0x00000000       0x26 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o
                0x00000000                __vector_default
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x00000026      0x3c1 Projecto LCD.o
                0x000003e8                . = ALIGN (0x2)
 *fill*         0x000003e7        0x1 00
                0x000003e8                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000003e8        0x0 linker stubs
 *(.trampolines*)
                0x000003e8                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000003e8                __ctors_start = .
 *(.ctors)
                0x000003e8                __ctors_end = .
                0x000003e8                __dtors_start = .
 *(.dtors)
                0x000003e8                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000003e8        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o
                0x000003e8                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000003e8        0xc c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000003f4       0x16 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_copy_data.o)
                0x000003f4                __do_copy_data
 .init4         0x0000040a       0x10 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_clear_bss.o)
                0x0000040a                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000041a        0x4 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x0000041e        0x2 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o
                0x0000041e                __vector_1
                0x0000041e                __vector_12
                0x0000041e                __bad_interrupt
                0x0000041e                __vector_6
                0x0000041e                __vector_3
                0x0000041e                __vector_11
                0x0000041e                __vector_13
                0x0000041e                __vector_17
                0x0000041e                __vector_7
                0x0000041e                __vector_5
                0x0000041e                __vector_4
                0x0000041e                __vector_2
                0x0000041e                __vector_15
                0x0000041e                __vector_8
                0x0000041e                __vector_14
                0x0000041e                __vector_10
                0x0000041e                __vector_16
                0x0000041e                __vector_18
 .text          0x00000420      0xc8a Projecto LCD.o
                0x00000420                long_delay_ms
                0x0000043e                long_delay_s
                0x00000454                send_char
                0x0000045c                read_char
                0x00000464                write_str
                0x0000048a                init_usart
                0x000004c8                write_enter
                0x000004f8                i2c_init
                0x00000500                i2c_start
                0x0000053c                i2c_start_wait
                0x00000578                i2c_rep_start
                0x0000057c                i2c_stop
                0x00000588                i2c_write
                0x000005a2                i2c_readAck
                0x000005b0                i2c_readNak
                0x000005be                i2c_write_check
                0x000005de                LCD_clearFrameBuffer
                0x000005ee                LCD_cleartextBuffer
                0x00000600                LCD_setPixelXY
                0x00000694                start_write
                0x0000069e                command
                0x000006ae                setFunction
                0x000006cc                LCD_Reset
                0x0000074c                prepare_write
                0x00000788                LCD_displayFrameBuffer
                0x000007f8                LCD_Init
                0x00000802                LCD_drawLine
                0x000008f8                clampX
                0x00000900                clampY
                0x00000908                LCD_fillRect
                0x00000982                LCD_char
                0x00000a2c                LCD_drawString
                0x00000ab4                write_hex
                0x00000adc                dump_framebuffer
                0x00000b02                LCD_text_mode_shiftar
                0x00000bb4                LCD_text_mode
                0x00000d06                preenche_ecra
                0x00000da2                LCD_print_image
                0x00000dc4                main
                0x00000e74                LCD_desenha_cursor
                0x00000ec0                LCD_text_status
                0x00001012                __vector_9
 .text          0x000010aa        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_udivmodqi4.o)
 .text          0x000010aa        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_exit.o)
 .text          0x000010aa        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_copy_data.o)
 .text          0x000010aa        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_clear_bss.o)
                0x000010aa                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x000010aa       0x18 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_udivmodqi4.o)
                0x000010aa                __udivmodqi4
 .text.libgcc   0x000010c2        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_exit.o)
 .text.libgcc   0x000010c2        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_copy_data.o)
 .text.libgcc   0x000010c2        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_clear_bss.o)
                0x000010c2                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000010c2        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_exit.o)
                0x000010c2                _exit
                0x000010c2                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000010c2        0x4 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_exit.o)
 *(.fini0)
                0x000010c6                _etext = .

.data           0x00800060       0x86 load address 0x000010c6
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o
 .data          0x00800060       0x86 Projecto LCD.o
 .data          0x008000e6        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_udivmodqi4.o)
 .data          0x008000e6        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_exit.o)
 .data          0x008000e6        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_copy_data.o)
 .data          0x008000e6        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x008000e6                . = ALIGN (0x2)
                0x008000e6                _edata = .
                0x008000e6                PROVIDE (__data_end, .)

.bss            0x008000e6      0x29b
                0x008000e6                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x008000e6        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o
 .bss           0x008000e6        0x5 Projecto LCD.o
                0x008000e6                posicao_cursor
                0x008000e7                text_page
                0x008000e8                status
                0x008000e9                pisca
 .bss           0x008000eb        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_udivmodqi4.o)
 .bss           0x008000eb        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_exit.o)
 .bss           0x008000eb        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_copy_data.o)
 .bss           0x008000eb        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x008000eb      0x296 Projecto LCD.o
                0x008000eb                coluna
                0x008000ec                linha
                0x008000ed                frameBuffer
                0x008002cd                textBuffer
                0x00800381                PROVIDE (__bss_end, .)
                0x000010c6                __data_load_start = LOADADDR (.data)
                0x0000114c                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800381        0x0
                0x00800381                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800381                PROVIDE (__noinit_end, .)
                0x00800381                _end = .
                0x00800381                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0x6cc
 *(.stab)
 .stab          0x00000000      0x6cc c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o

.stabstr        0x00000000       0x85
 *(.stabstr)
 .stabstr       0x00000000       0x85 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(Projecto LCD.elf elf32-avr)
LOAD linker stubs
